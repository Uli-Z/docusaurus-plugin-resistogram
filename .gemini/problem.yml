# Docusaurus Plugin - Hierarchical Data Sources

goal: >
  Refactor the Docusaurus plugin to support hierarchical data sources for resistance data.
  Child sources should inherit data from their parents, with the child's data overriding
  the parent's where conflicts exist.

constraints:
  - The implementation must be contained within the existing `docusaurus-plugin-resistogram` project structure.
  - The data merging logic must follow the principles demonstrated in the `.gemini/generate_html_report.py` script (concatenating data from the inheritance path and keeping the last entry on duplicates).
  - The solution must not break existing functionality, such as the `%%RESIST%%` directive or automatic ID resolution.

out_of_scope:
  - Adding new data files or modifying the existing CSV data content.
  - Changing the visual appearance of the `ResistanceTable` itself (colors, layout, etc.), beyond the `SourceSwitcher`.
  - Implementing new end-to-end UI tests from scratch.

acceptance_criteria:
  - AC1: The build process must read the `parent_id` from `data_sources.csv` to understand the source hierarchy.
  - AC2: For any given data source, the plugin must load its data and the data of all its parents. When merging, data from a more specific source (a child) must overwrite data from a more general source (a parent) for the same antibiotic-organism pair.
  - AC3: The `SourceSwitcher` dropdown component in the UI must visually represent the data source hierarchy using indentation.
  - AC4: The `ResistanceTable` must correctly initialize and display data from the first available data source in the flattened list.

test_matrix:
  - type: unit
    description: Test the `getPathToSource` helper to ensure it correctly returns the full inheritance chain for a given source ID.
    area: data-loading
  - type: unit
    description: Test `loadResistanceDataForSource` with mock CSV data to verify that parent data is loaded and correctly overridden by child data.
    area: data-loading
  - type: component
    description: Create a snapshot test for the `SourceSwitcher` component to verify it renders an indented, hierarchical structure when given nested source data.
    area: ui
